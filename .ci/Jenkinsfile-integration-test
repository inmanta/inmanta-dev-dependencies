pipeline {
    agent any

    triggers {
        cron(BRANCH_NAME == "master" ? "H H(2-5) * * *": "")
    }

    environment {
        REPO_NAME="inmanta-dev-dependencies"
        PIP_INDEX_URL='https://artifacts.internal.inmanta.com/inmanta/dev'
        // No prompts allowed
        PYTHON_KEYRING_BACKEND="keyring.backends.null.Keyring"
    }

    options {
        disableConcurrentBuilds()
        checkoutToSubdirectory(env.REPO_NAME)
        skipDefaultCheckout()
    }

    stages {
        stage("Setup") {
            steps {
                deleteDir()
                dir(env.REPO_NAME) {
                    checkout scm
                    script {
                        sh '''
                            # Obtain python version
                            rm -rf ${WORKSPACE}/env
                            python3 -m venv ${WORKSPACE}/env
                            ${WORKSPACE}/env/bin/pip install -U pip
                            ${WORKSPACE}/env/bin/pip install --pre irt
                            python_version=$(${WORKSPACE}/env/bin/irt query-toml-file --file ./pyproject.toml --query "project.requires-python"| sed "s/\\>=//g")
                            python_binary="python${python_version}"
                            echo ${python_binary}
                            # Setup venv for test
                            rm -rf ${WORKSPACE}/env
                            ${python_binary} -m venv ${WORKSPACE}/env
                            # First upgrade pip, then install other packages
                            ${WORKSPACE}/env/bin/python3 -m pip install -U pip

                        '''
                    }
                }
            }
        }

        stage("install") {
            steps {
                dir(env.REPO_NAME) {
                    script {
                        sh '${WORKSPACE}/env/bin/pip install -e .[async,extension,module,pytest,sphinx,core]'
                    }
                }
            }
        }
    }
    post{
        cleanup{
            deleteDir()
        }
    }
}
