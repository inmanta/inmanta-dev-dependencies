pipeline {
    agent any

    triggers {
        // release dependency updates each friday night so dependabot can update dependencies on this package over the weekend
        cron(BRANCH_NAME == "master" ? "H H(18-23) * * 5": "")
    }

    options {
        disableConcurrentBuilds()
        checkoutToSubdirectory("inmanta-dev-dependencies")
        skipDefaultCheckout()
    }

    stages {
        stage("Check for changes") {
            when {
                expression { "${env.BRANCH_NAME}" == "master" }
            }
            steps {
                deleteDir()
                dir("inmanta-dev-dependencies") {
                    checkout scm
                    script {
                        status = sh(
                            returnStatus: true,
                            // Ignore the change of the version of the inmanta-dev-dependencies package itself
                            script: '''
                                git checkout master
                                git diff -U0  origin/latest -- pyproject.toml | grep '^[+-]' | grep -Ev '^(--- a/|\\+\\+\\+ b/)' | grep -Ev '^(\\+|-)version = "[0-9]+\\.[0-9]+\\.[0-9]+"$'
                            '''
                        )
                        if (!status) {
                            env.HAS_CHANGES = true
                        } else {
                            env.HAS_CHANGES = false
                        }
                    }
                }
            }
        }

        stage("Build release job") {
            when {
                allOf {
                    expression { "${env.BRANCH_NAME}" == "master" }
                    expression { "${env.HAS_CHANGES}" == "true" }
                }
            }
            steps {
                build(
                    job: "/releases/python-packages/inmanta-dev-dependencies-pypi-release/master",
                    parameters: [
                        string(name: "release_type", value: "stable"),
                        string(name: "version_increment", value: "minor"),
                        booleanParam(name: "run_job", value: true),
                        booleanParam(name: "upload", value: true),
                        booleanParam(name: "auto_merge_version_bump", value: true),
                    ]
                )
            }
        }
    }
}
